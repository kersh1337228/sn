# Generated by Django 3.2.7 on 2021-11-04 00:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('user_media', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user_note', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='comment',
            name='audios',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='files',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='images',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='replies_amount',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='replies_to',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='videos',
        ),
        migrations.RemoveField(
            model_name='note',
            name='audios',
        ),
        migrations.RemoveField(
            model_name='note',
            name='comments_amount',
        ),
        migrations.RemoveField(
            model_name='note',
            name='files',
        ),
        migrations.RemoveField(
            model_name='note',
            name='images',
        ),
        migrations.RemoveField(
            model_name='note',
            name='videos',
        ),
        migrations.RemoveField(
            model_name='postmixin',
            name='likes_amount',
        ),
        migrations.AddField(
            model_name='comment',
            name='comment_id',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Comment ID'),
        ),
        migrations.AddField(
            model_name='comment',
            name='note_commented',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commented_note', to='user_note.note'),
        ),
        migrations.AddField(
            model_name='like',
            name='comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='like_to_comment', to='user_note.comment'),
        ),
        migrations.AddField(
            model_name='like',
            name='note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='like_to_note', to='user_note.note'),
        ),
        migrations.AddField(
            model_name='note',
            name='comments',
            field=models.ManyToManyField(related_name='note_comments', to='user_note.Comment'),
        ),
        migrations.AddField(
            model_name='note',
            name='note_id',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Note ID'),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='audios',
            field=models.ManyToManyField(related_name='note_audios', to='user_media.Audio'),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='files',
            field=models.ManyToManyField(related_name='note_files', to='user_media.File'),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='images',
            field=models.ManyToManyField(related_name='note_images', to='user_media.Image'),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='liked_by',
            field=models.ManyToManyField(related_name='note_liked_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='likes',
            field=models.ManyToManyField(related_name='note_likes', to='user_note.Like'),
        ),
        migrations.AddField(
            model_name='postmixin',
            name='videos',
            field=models.ManyToManyField(related_name='note_videos', to='user_media.Video'),
        ),
        migrations.AlterField(
            model_name='like',
            name='user',
            field=models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to='user.user'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='repost',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('postmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='user_note.postmixin')),
                ('reply_id', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Reply ID')),
                ('comment_replied', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_replied', to='user_note.comment')),
            ],
            bases=('user_note.postmixin',),
        ),
        migrations.AddField(
            model_name='comment',
            name='replies',
            field=models.ManyToManyField(related_name='comment_replies', to='user_note.Reply'),
        ),
    ]
