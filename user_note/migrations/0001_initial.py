# Generated by Django 3.2.7 on 2021-10-29 00:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_community', '0001_initial'),
        ('user_media', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PostMixin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
                ('publish_time', models.DateTimeField(auto_now_add=True, verbose_name='Published')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Last updated')),
                ('likes_amount', models.PositiveIntegerField(blank=True, default=0, verbose_name='Likes')),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_community.community')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('postmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='user_note.postmixin')),
                ('comments_amount', models.PositiveIntegerField(blank=True, default=0, verbose_name='Comments')),
                ('reposts_amount', models.PositiveIntegerField(blank=True, default=0, verbose_name='Reposts')),
                ('audios', models.ManyToManyField(related_name='note_audios', to='user_media.Audio')),
                ('files', models.ManyToManyField(related_name='note_files', to='user_media.File')),
                ('images', models.ManyToManyField(related_name='note_images', to='user_media.Image')),
                ('videos', models.ManyToManyField(related_name='note_videos', to='user_media.Video')),
            ],
            bases=('user_note.postmixin', models.Model),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('postmixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='user_note.postmixin')),
                ('replies_amount', models.PositiveIntegerField()),
                ('audios', models.ManyToManyField(related_name='comment_audios', to='user_media.Audio')),
                ('files', models.ManyToManyField(related_name='comment_files', to='user_media.File')),
                ('images', models.ManyToManyField(related_name='comment_images', to='user_media.Image')),
                ('replies_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_note.comment')),
                ('videos', models.ManyToManyField(related_name='comment_videos', to='user_media.Video')),
            ],
            bases=('user_note.postmixin', models.Model),
        ),
    ]
